# Kernel config based on: arch/arm64/configs/aeon6797_6m_n_halium_defconfig

pkgname="linux-planet-geminipda"
pkgver=3.18.41
pkgrel=0
pkgdesc="Gemini PDA kernel fork"
arch="aarch64"
_carch="arm64"
_flavor="planet-geminipda"
url="https://kernel.org"
license="GPL2"
options="!strip !check !tracedeps"
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev python"
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

# Source
_repository="kernel-3.18-geminipda"
_commit="2e7ae03d5a6d48d479c1189720a1167ba3580be4"
_config="config-${_flavor}.${arch}"
source="
	$pkgname-$_commit.tar.gz::https://github.com/NotKit/${_repository}/archive/${_commit}.tar.gz
	$_config
	compiler-gcc6.h
"
builddir="$srcdir/${_repository}-${_commit}"

prepare() {
	default_prepare

	# gcc6 support
	cp -v "$srcdir/compiler-gcc6.h" "$builddir/include/linux/"

	# Remove -Werror from all makefiles
	local i
	local makefiles="$(find . -type f -name Makefile)
		$(find . -type f -name Kbuild)"
	for i in $makefiles; do
		sed -i 's/-Werror-/-W/g' "$i"
		sed -i 's/-Werror//g' "$i"
	done

	# Device kernel must(!) be build out-of-tree to avoid include errors
	mkdir -p "$builddir"/KERNEL_OBJ

	# Prepare kernel config ('yes ""' for kernels lacking olddefconfig)
	cp "$srcdir"/$_config "$builddir"/KERNEL_OBJ/.config
	yes "" | make ARCH="$_carch" HOSTCC="$HOSTCC" O="$builddir"/KERNEL_OBJ oldconfig
}

menuconfig() {
	cd "$builddir"
	make ARCH="$_carch" menuconfig
	cp .config "$startdir"/$_config
}

build() {
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-postmarketOS" \
		O="$builddir"/KERNEL_OBJ
}

package() {
	# kernel.release
	install -D "$builddir/KERNEL_OBJ/include/config/kernel.release" \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"

	# zImage (find the right one)
	cd "$builddir/KERNEL_OBJ/arch/$_carch/boot"
	_target="$pkgdir/boot/vmlinuz-$_flavor"
	for _zimg in zImage-dtb Image.gz-dtb *zImage Image; do
		[ -e "$_zimg" ] || continue
		msg "zImage found: $_zimg"
		install -Dm644 "$_zimg" "$_target"
		break
	done
	if ! [ -e "$_target" ]; then
		error "Could not find zImage in $PWD!"
		return 1
	fi
}

sha512sums="df4b0ae5e3bb1df6ba46a6c0b564e3363cef722ce24adf65e5278ea9df710331c7eed071010a6b92254c73a8a62dce34263d65a993a75b12c532b6aac9be98f4  linux-planet-geminipda-2e7ae03d5a6d48d479c1189720a1167ba3580be4.tar.gz
fe0956fcd6268c6242d0ac7120c4f10f4a883b37fbe168ed6c54f127594bfe8c7e56fa9ab41a36a514d3973b61e8856e407d055ac20c3748fbb826535254b696  config-planet-geminipda.aarch64
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h"
